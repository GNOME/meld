stages:
  - check
  - build

variables:
  DEPENDENCIES: python3
                python3-pip
                python3-pytest
                python3-gobject
                gobject-introspection
                gtk3
                gtksourceview4
                intltool
                glib2-devel

.linux-common: &linux-common
  image: fedora:rawhide
  before_script:
    - dnf update -y
    - dnf install -y $DEPENDENCIES

flake8:
  stage: check
  script:
    - pip3 install -r dev-requirements.txt
    - flake8 bin/meld meld/
  allow_failure: true
  <<: *linux-common

linux-pytest:
  stage: check
  script:
    - py.test-3 test/
  <<: *linux-common

linux-build:
  stage: build
  script:
    - python3 setup.py build
  <<: *linux-common

.mingw-common: &mingw-common
  stage: build
  tags: # select gitlab runners with specific tag (unrelated to git repo tags)
    - win32
  artifacts:
    name: "%CI_JOB_STAGE%-%CI_COMMIT_REF_NAME%"
    paths:
      - dist/
  before_script:
    - path C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;%PATH%
    - pacman --noconfirm -S --refresh --sysupgrade --needed mingw-w64-%MSYS2_ARCH%-python3-cx_Freeze mingw-w64-%MSYS2_ARCH%-python3-gobject mingw-w64-%MSYS2_ARCH%-python3-pytest mingw-w64-%MSYS2_ARCH%-gtksourceview4 mingw-w64-%MSYS2_ARCH%-gsettings-desktop-schemas glib2-devel intltool
  script:
    - glib-compile-schemas data
    - python3 setup_win32.py bdist_dumb --bdist-dir build\bdist.mingw\msi --keep-temp bdist_msi --keep-temp
  # main purpose of this job is creating installers and not checking for breakage by changes in code
  # so allow failures since the status of the build may depend on updates of rolling-release msys2 packages
  allow_failure: true

mingw64-dist:
  variables:
    MSYS2_ARCH: x86_64
    MSYSTEM: MINGW64
  <<: *mingw-common

mingw32-dist:
  variables:
    MSYS2_ARCH: i686
    MSYSTEM: "MINGW32"
  <<: *mingw-common
